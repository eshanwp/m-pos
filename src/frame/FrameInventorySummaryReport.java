/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import cls.Product;
import cls.Stock;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author esh
 */
public class FrameInventorySummaryReport extends javax.swing.JFrame {

    String LOACATION_ID = null;
    String USER_NAME = null;

    /**
     * Creates new form FrameCategory
     */
    public FrameInventorySummaryReport() {
        initComponents();
    }

    public FrameInventorySummaryReport(String LOCATIONID, String USERNAME) {
        initComponents();

        LOACATION_ID = LOCATIONID;
        USER_NAME = USERNAME;
        
        searchAll();
    }

    public void searchAll() {

        String idProduct = null;
        String productCode = null;
        String productName = null;
        String sellingPrice = null;
        String idStock=null;
        String sellingPriceDb=null;
        String avialableQtyDb=null;
        String tot_QtyDb=null;
        String cost=null;
        
        Double totOPstock=0.00;
        Double qty=0.00;
        Double totSellingQty=null;
        Double tot_Qty=0.00;
        Double avialable_Qty=0.00;

        DefaultTableModel dtm = new DefaultTableModel();
        dtm = (DefaultTableModel)jTable1.getModel();
        dtm.setRowCount(0);

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM product WHERE status='" + "ACTIVE" + "' ");
            while (rs.next()) {
                Vector v = new Vector();
                idProduct = rs.getString("idproduct");
                productCode = rs.getString("p_code");
                productName = rs.getString("p_name");
                sellingPrice = rs.getString("selling_price");
                cost = rs.getString("cost");
                
                ResultSet rs7 = cls.db.myConnection().createStatement().executeQuery("SELECT DISTINCT idstock FROM stock_entry WHERE idproduct='" + idProduct + "'  ");

                while (rs7.next()) {
                    idStock = rs7.getString("idstock");
                }

                ResultSet rs8 = cls.db.myConnection().createStatement().executeQuery("SELECT DISTINCT selling_price FROM product WHERE idproduct='" + idProduct + "'  ");

                while (rs8.next()) {
                    sellingPriceDb = rs8.getString("selling_price");
                }

                ResultSet rs3 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(opStock) FROM stock_entry WHERE idproduct='" + idProduct + "'  ");
                while (rs3.next()) {

                    totOPstock = rs3.getDouble("SUM(opStock)");
                }

                ResultSet rs4 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(qty) FROM stock_entry WHERE idproduct='" + idProduct + "'  ");
                while (rs4.next()) {

                    qty = rs4.getDouble("SUM(qty)");
                }

                ResultSet rs5 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(qty) FROM invoice WHERE id_product='" + idProduct + "' ");
                while (rs5.next()) {

                    totSellingQty = rs5.getDouble("SUM(qty)");

                }

                tot_Qty = totOPstock + qty;
                
                avialable_Qty = tot_Qty - totSellingQty;
               
                Double SUB_TOTA = Double.parseDouble(cost)*avialable_Qty;
                
                DecimalFormat df1 = new DecimalFormat("0.00");
                avialableQtyDb = df1.format(avialable_Qty);
                
                DecimalFormat df2 = new DecimalFormat("0.00");
                String subTotaldb = df1.format(SUB_TOTA);

                v.add(idStock);
                v.add(productCode);
                v.add(productName);
                v.add(sellingPriceDb);
                v.add(avialableQtyDb);
                v.add(cost);
                v.add(subTotaldb);

                dtm.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inventory Summary Report");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Inventory Summary Report");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 20));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STOCK ID", "PRODUCT CODE", "PRODUCT NAME", "RETAILPRICE", "AVAILABLE QTY", "COST", "SUB TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 900, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    String supplier_code = null;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameInventorySummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameInventorySummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameInventorySummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameInventorySummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameInventorySummaryReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
