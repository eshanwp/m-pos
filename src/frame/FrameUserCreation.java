package frame;


import AppPackage.AnimationClass;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author esh
 */
public class FrameUserCreation extends javax.swing.JFrame {

    String NIC;
    String LOCATION;
    String USERNAME;
    String ID_ACCESSPOINT;
    String iduser = null;

    String USER_NAME;
    String LOACATION_ID;

    DefaultTableModel dtm1 = new DefaultTableModel();

    /**
     * Creates new form USER_CREATION
     */
    public FrameUserCreation() {
        initComponents();
    }

    public FrameUserCreation(String LOCATIONID, String USERNAME) {
        initComponents();
        idUser();
        loadLocation();
        jButtonActive.setVisible(false);
        jButtonInactive.setVisible(false);
        jButtonSave.setVisible(true);
        jTextFieldUserName.grabFocus();
        jButtonUpdate.setVisible(false);

        USER_NAME = USERNAME;
        LOACATION_ID = LOCATIONID;

        jPasswordFieldPassword1.setEnabled(false);
        jPasswordFieldPassword2.setEnabled(false);

//        System.out.println(USERNAME);

        //User Details table
        DefaultTableModel dtm = (DefaultTableModel) jTableUserDetails.getModel();
        dtm.setRowCount(0);

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM user");

            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("userName"));
                v.add(rs.getString("nic"));
                v.add(rs.getString("status"));

                dtm.addRow(v);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

        //User Accesspoint table
        DefaultTableModel dtm1 = (DefaultTableModel) jTableAccessPoint.getModel();
        dtm1.setRowCount(0);

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM accesspoint_discription");

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("idaccessPoint"));
                v.add(rs.getString("description"));

                Boolean f = false;
                v.add(f);

                dtm1.addRow(v);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

    }

    void idUser() {

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT MAX(iduser) FROM user");

            while (rs.next()) {

                if (rs.getInt("MAX(iduser)") == 0) {

                    iduser = "01";

                } else {
                    int i = rs.getInt("MAX(iduser)") + 1;

                    if (i >= 10) {
                        iduser = i + "";
                    } else {
                        iduser = "0" + i + "";
                    }

                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

    }

    void loadLocation() {

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM location");

            Vector v = new Vector();

            v.add("--SELECT--");
            while (rs.next()) {

                v.add(rs.getString("locationName"));
            }

            jComboBoxLocation.setModel(new DefaultComboBoxModel(v));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAccessPoint = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPasswordFieldPassword1 = new javax.swing.JPasswordField();
        jLabel24 = new javax.swing.JLabel();
        jPasswordFieldPassword2 = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        jComboBoxLocation = new javax.swing.JComboBox();
        jButtonSave = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jButtonInactive = new javax.swing.JButton();
        jLabelUserName = new javax.swing.JLabel();
        jLabelNICno = new javax.swing.JLabel();
        jLabelPassword1 = new javax.swing.JLabel();
        jLabelPassword2 = new javax.swing.JLabel();
        jLabelLocation = new javax.swing.JLabel();
        jTextFieldNICno = new javax.swing.JTextField();
        jTextFieldUserName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableUserDetails = new javax.swing.JTable();
        jButtonActive = new javax.swing.JButton();
        jLabelUsername = new javax.swing.JLabel();
        jButtonUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Creation");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("User Creation");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableAccessPoint.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO", "ACESS POINT", "SELECT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableAccessPoint);
        if (jTableAccessPoint.getColumnModel().getColumnCount() > 0) {
            jTableAccessPoint.getColumnModel().getColumn(0).setMinWidth(50);
            jTableAccessPoint.getColumnModel().getColumn(0).setMaxWidth(50);
            jTableAccessPoint.getColumnModel().getColumn(2).setMinWidth(50);
            jTableAccessPoint.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 380, 420));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/selectAll1.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/selectAll2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 74, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/de select1.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/de select2.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 74, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 430, 500));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("User Name *");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Password *");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jPasswordFieldPassword1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFieldPassword1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordFieldPassword1FocusLost(evt);
            }
        });
        jPasswordFieldPassword1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordFieldPassword1KeyReleased(evt);
            }
        });
        jPanel1.add(jPasswordFieldPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 207, 22));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Confirm Password *");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jPasswordFieldPassword2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFieldPassword2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordFieldPassword2FocusLost(evt);
            }
        });
        jPanel1.add(jPasswordFieldPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 207, 22));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Location *");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        jComboBoxLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxLocationFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxLocationFocusLost(evt);
            }
        });
        jComboBoxLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLocationActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 207, 22));

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save1.png"))); // NOI18N
        jButtonSave.setContentAreaFilled(false);
        jButtonSave.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save2.png"))); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 460, 74, 30));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("NIC No *");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jButtonInactive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inactive1.png"))); // NOI18N
        jButtonInactive.setContentAreaFilled(false);
        jButtonInactive.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inactive2.png"))); // NOI18N
        jButtonInactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInactiveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonInactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 460, 74, 30));

        jLabelUserName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelUserName.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 75, 200, 15));

        jLabelNICno.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelNICno.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelNICno, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 125, 200, 15));

        jLabelPassword1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelPassword1.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 175, 200, 15));

        jLabelPassword2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelPassword2.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 225, 200, 15));

        jLabelLocation.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelLocation.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 275, 200, 15));

        jTextFieldNICno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNICnoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNICnoFocusLost(evt);
            }
        });
        jTextFieldNICno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNICnoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNICnoKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldNICno, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 210, -1));

        jTextFieldUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldUserNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldUserNameFocusLost(evt);
            }
        });
        jTextFieldUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldUserNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldUserNameKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 210, -1));

        jTableUserDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USER NAME", "NIC NO", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUserDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserDetailsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableUserDetails);
        if (jTableUserDetails.getColumnModel().getColumnCount() > 0) {
            jTableUserDetails.getColumnModel().getColumn(1).setMinWidth(100);
            jTableUserDetails.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 360, 140));

        jButtonActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/active1.png"))); // NOI18N
        jButtonActive.setContentAreaFilled(false);
        jButtonActive.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/active2.png"))); // NOI18N
        jButtonActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActiveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 74, 30));
        jPanel1.add(jLabelUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 14, 90, 20));

        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update1.png"))); // NOI18N
        jButtonUpdate.setContentAreaFilled(false);
        jButtonUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update2.png"))); // NOI18N
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 74, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordFieldPassword2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPassword2FocusLost

        String pw1 = new String(jPasswordFieldPassword1.getPassword());
        String pw2 = new String(jPasswordFieldPassword2.getPassword());

        if (pw1.equals(pw2)) {
            jLabelPassword2.setText("");
        } else {
            jLabelPassword2.setText("Password is not match");
            jPasswordFieldPassword1.grabFocus();
        }
    }//GEN-LAST:event_jPasswordFieldPassword2FocusLost
    String LocationID = null;
    private void jComboBoxLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLocationActionPerformed

        if (jComboBoxLocation.getSelectedIndex() > 0) {
            jLabelLocation.setText("");
        }

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM location WHERE locationName='" + jComboBoxLocation.getSelectedItem().toString() + "' ");

            while (rs.next()) {
                LocationID = rs.getString("idlocation");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_jComboBoxLocationActionPerformed

    private void jPasswordFieldPassword1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldPassword1KeyReleased

        if (jPasswordFieldPassword1.getPassword().length <= 6) {
            jLabelPassword1.setText("Password is week");
        } else {
            jLabelPassword1.setText("");
        }
    }//GEN-LAST:event_jPasswordFieldPassword1KeyReleased
    String pw1 = null;
    String pw2 = null;
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        pw1 = new String(jPasswordFieldPassword1.getPassword());
        pw2 = new String(jPasswordFieldPassword2.getPassword());

        if (jTextFieldUserName.getText().length() <= 0 || jTextFieldNICno.getText().length() < 10 || jPasswordFieldPassword1.getPassword().length < 6
                || jPasswordFieldPassword2.getPassword().length < 6 || jComboBoxLocation.getSelectedIndex() <= 0) {

            if (jTextFieldUserName.getText().length() <= 0) {
                jLabelUserName.setText("Required");
            }

            if (jTextFieldNICno.getText().length() < 10) {
                jLabelNICno.setText("Required");
            }

            if (jPasswordFieldPassword1.getPassword().length < 6) {
                jLabelPassword1.setText("Required");
            }

            if (jPasswordFieldPassword2.getPassword().length < 6) {
                jLabelPassword2.setText("Required");
            }

            if (jComboBoxLocation.getSelectedIndex() <= 0) {
                jLabelLocation.setText("Required");
            }

        } else {

            try {
                dtm1 = (DefaultTableModel) jTableAccessPoint.getModel();

                for (int i = 0; i < jTableAccessPoint.getRowCount(); i++) {

                    String idaccessPoint = jTableAccessPoint.getValueAt(i, 0).toString();
                    String privilegeStatus = jTableAccessPoint.getValueAt(i, 2).toString();

                    cls.db.myConnection().createStatement().executeUpdate("INSERT INTO accesspoint (idaccessPoint, privilegeStatus, username, user_iduser)"
                            + "VALUES ('" + idaccessPoint + "' , '" + privilegeStatus + "' , '" + jTextFieldUserName.getText() + "' , '" + iduser + "') ");

                }

                cls.db.myConnection().createStatement().executeUpdate("INSERT INTO user (iduser, userName, nic, password1, password2, oldPassword, location, status, lockStatus)"
                        + "VALUES('" + iduser + "' , '" + jTextFieldUserName.getText() + "' , '" + jTextFieldNICno.getText() + "' , '" + pw1 + "' ,"
                        + "'" + pw2 + "' , '" + pw2 + "' , '" + LocationID + "' ,"
                        + "'" + "ACTIVE" + "' , '" + "UNLOCK" + "') ");

                JOptionPane.showMessageDialog(rootPane, "Successfully created\nYou can now login the system.");

                this.dispose();
                FrameUserCreation uc = new FrameUserCreation();
                uc.setVisible(true);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Please select the user privilege");
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldNICnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNICnoKeyReleased

        char c=evt.getKeyChar();
        
        if (c==evt.VK_BACK_SPACE) {
            jPasswordFieldPassword1.setEnabled(false);
            jPasswordFieldPassword2.setEnabled(false);
        }
        
        String s = jTextFieldNICno.getText();
        jTextFieldNICno.setText(s.toUpperCase());

        jLabelNICno.setText("");

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM user WHERE nic='" + jTextFieldNICno.getText() + "' ");

            while (rs.next()) {
                NIC = rs.getString("nic");
            }

            if (jTextFieldNICno.getText().equals(NIC)) {
                jLabelNICno.setText("NIC already used");
                jTextFieldNICno.grabFocus();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM employeemaster WHERE nic='" + jTextFieldNICno.getText() + "' ");
            while (rs.next()) {
                dbEmpNIC = rs.getString("nic");

                if (jTextFieldNICno.getText().equals(dbEmpNIC)) {

                    jPasswordFieldPassword1.setEnabled(true);
                    jPasswordFieldPassword2.setEnabled(true);
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }


    }//GEN-LAST:event_jTextFieldNICnoKeyReleased

    private void jTextFieldUserNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUserNameKeyReleased

        jLabelUserName.setText("");

        String s = jTextFieldUserName.getText();
        jTextFieldUserName.setText(s.toLowerCase());

//
//        int i = jTextFieldUserName.getText().length();
//        jLabelUserName.setText(i + "");
        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM user WHERE userName='" + jTextFieldUserName.getText() + "' ");

            while (rs.next()) {
                USERNAME = rs.getString("userName");
            }

            if (jTextFieldUserName.getText().equals(USERNAME)) {
                jLabelUserName.setText("User name already exist");
            }
            jTextFieldUserName.grabFocus();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_jTextFieldUserNameKeyReleased

    private void jTextFieldUserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldUserNameFocusLost

        if (jTextFieldUserName.getText().equals(USERNAME)) {
            jTextFieldUserName.grabFocus();
        }

    }//GEN-LAST:event_jTextFieldUserNameFocusLost
    String dbEmpNIC = null;
    String user=null;
    private void jTextFieldNICnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNICnoFocusLost

        if (jTextFieldNICno.getText().equals(NIC)) {
            jTextFieldNICno.grabFocus();
        }
        
    }//GEN-LAST:event_jTextFieldNICnoFocusLost

    private void jPasswordFieldPassword1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPassword1FocusLost

    }//GEN-LAST:event_jPasswordFieldPassword1FocusLost

    private void jComboBoxLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxLocationFocusGained

        jButtonSave.setVisible(true);
        jButtonInactive.setVisible(false);
        jButtonActive.setVisible(false);

        String pw1 = new String(jPasswordFieldPassword1.getPassword());
        String pw2 = new String(jPasswordFieldPassword2.getPassword());

        if (pw1.equals(pw2)) {
            jLabelPassword2.setText("");
        } else {
            jLabelPassword2.setText("Password is not match");
            jPasswordFieldPassword1.grabFocus();
        }
    }//GEN-LAST:event_jComboBoxLocationFocusGained

    private void jTextFieldNICnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNICnoKeyTyped

        if (jTextFieldNICno.getText().length() > 11) {
            evt.consume();
        } else if (jTextFieldNICno.getText().length() <= 11) {
            jLabelNICno.setText("");
        }
    }//GEN-LAST:event_jTextFieldNICnoKeyTyped

    private void jComboBoxLocationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxLocationFocusLost

        if (jComboBoxLocation.getSelectedIndex() < 1) {
            jLabelLocation.setText("Required");
        }
    }//GEN-LAST:event_jComboBoxLocationFocusLost

    String id_user = null;
    String userName = null;
    private void jTableUserDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUserDetailsMouseClicked

        String user_name = null;

        jButtonUpdate.setVisible(true);
        jButtonActive.setVisible(true);
        jButtonInactive.setVisible(true);
        jButtonSave.setVisible(false);
        jTableAccessPoint.setEnabled(true);

        jTextFieldUserName.setEnabled(false);
        jTextFieldNICno.setEnabled(false);
        jPasswordFieldPassword1.setEnabled(false);
        jPasswordFieldPassword2.setEnabled(false);
        jComboBoxLocation.setEnabled(false);

        try {

            DefaultTableModel dtm = (DefaultTableModel) jTableUserDetails.getModel();

            int i = jTableUserDetails.getSelectedRow();
            int j = jTableUserDetails.getSelectedColumn();

            String nic_no = jTableUserDetails.getValueAt(i, 1).toString();
            user_name = jTableUserDetails.getValueAt(i, 0).toString();
            
            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM user WHERE nic='" + nic_no + "'  ");

            while (rs.next()) {

                id_user = rs.getString("iduser");
                userName = rs.getString("userName");

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

        if (user_name.equals("admin")) {
            JOptionPane.showMessageDialog(rootPane, "Can't change admin access details");
            jButtonActive.setEnabled(false);
            jButtonInactive.setEnabled(false);
            jButtonUpdate.setEnabled(false);
            jTableAccessPoint.setEnabled(false);
            jButton1.setEnabled(false);
            jButton3.setEnabled(false);
        } else {

            try {

                dtm1 = (DefaultTableModel) jTableAccessPoint.getModel();
                dtm1.setRowCount(0);

                ResultSet rs1 = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM accesspoint WHERE username='" + userName + "' AND user_iduser='" + id_user + "' ");
                while (rs1.next()) {

                    String idaccessPoint = rs1.getString("idaccessPoint");

                    ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM accesspoint_discription WHERE idaccessPoint='" + idaccessPoint + "' ");
                    while (rs.next()) {

                        Vector v = new Vector();
                        v.add(rs.getString("idaccessPoint"));
                        v.add(rs.getString("description"));

                        Boolean t = true;
                        Boolean f = false;

                        String s = rs1.getString("privilegeStatus");
                        if (s.equals("true")) {
                            v.add(t);
                        } else {
                            v.add(f);
                        }

                        dtm1.addRow(v);

                    }

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }

    }//GEN-LAST:event_jTableUserDetailsMouseClicked

    private void jButtonInactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInactiveActionPerformed
        String STATUS = "INACTIVE";
        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM location");

            DefaultTableModel dtm = (DefaultTableModel) jTableUserDetails.getModel();

            int i = jTableUserDetails.getSelectedRow();
            int j = jTableUserDetails.getSelectedColumn();

            String col1 = dtm.getValueAt(i, 0).toString();
            String col2 = dtm.getValueAt(i, 1).toString();

            cls.db.myConnection().createStatement().executeUpdate("UPDATE user SET status='" + STATUS + "' WHERE nic='" + col2 + "' ");
            JOptionPane.showMessageDialog(rootPane, col1 + " is inactive");
            this.dispose();
            FrameUserCreation uc = new FrameUserCreation();
            uc.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_jButtonInactiveActionPerformed

    private void jButtonActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActiveActionPerformed

        String STATUS = "ACTIVE";
        String DEFAULT_PASSWORD = "abc@123";
        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM location");

            DefaultTableModel dtm = (DefaultTableModel) jTableUserDetails.getModel();

            int i = jTableUserDetails.getSelectedRow();
            int j = jTableUserDetails.getSelectedColumn();

            String col1 = dtm.getValueAt(i, 0).toString();
            String col2 = dtm.getValueAt(i, 1).toString();

            cls.db.myConnection().createStatement().executeUpdate("UPDATE user SET status='" + STATUS + "', password1='" + DEFAULT_PASSWORD + "', password2='" + DEFAULT_PASSWORD + "' WHERE nic='" + col2 + "' ");
            JOptionPane.showMessageDialog(rootPane, col1 + " is active\nPlease use the default password. Default password is abc@123");
            this.dispose();
            FrameUserCreation uc = new FrameUserCreation();
            uc.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_jButtonActiveActionPerformed

    private void jTextFieldUserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldUserNameFocusGained

        jButtonSave.setVisible(true);
        jButtonInactive.setVisible(false);
        jButtonActive.setVisible(false);
    }//GEN-LAST:event_jTextFieldUserNameFocusGained

    private void jTextFieldNICnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNICnoFocusGained

        jButtonSave.setVisible(true);
        jButtonInactive.setVisible(false);
        jButtonActive.setVisible(false);
    }//GEN-LAST:event_jTextFieldNICnoFocusGained

    private void jPasswordFieldPassword1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPassword1FocusGained
        jButtonSave.setVisible(true);
        jButtonInactive.setVisible(false);
        jButtonActive.setVisible(false);
    }//GEN-LAST:event_jPasswordFieldPassword1FocusGained

    private void jPasswordFieldPassword2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPassword2FocusGained
        jButtonSave.setVisible(true);
        jButtonInactive.setVisible(false);
        jButtonActive.setVisible(false);
    }//GEN-LAST:event_jPasswordFieldPassword2FocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        for (int i = 0; i < jTableAccessPoint.getRowCount(); i++) {
            Vector v = new Vector();
            Boolean t = true;

            jTableAccessPoint.setValueAt(t, i, 2);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed

        try {
            dtm1 = (DefaultTableModel) jTableAccessPoint.getModel();

            int j = jTableUserDetails.getSelectedRow();
            int k = jTableUserDetails.getSelectedColumn();

            String userNameTb = jTableUserDetails.getValueAt(j, 0).toString();

            for (int i = 0; i < jTableAccessPoint.getRowCount(); i++) {

                String idaccessPoint = jTableAccessPoint.getValueAt(i, 0).toString();
                String privilegeStatus = jTableAccessPoint.getValueAt(i, 2).toString();

                cls.db.myConnection().createStatement().executeUpdate("UPDATE accesspoint SET privilegeStatus='" + privilegeStatus + "' WHERE username='" + userNameTb + "' AND idaccessPoint='" + idaccessPoint + "'  ");

            }

            JOptionPane.showMessageDialog(rootPane, "Successfully updated");

            this.dispose();
            FrameUserCreation uc = new FrameUserCreation();
            uc.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
            JOptionPane.showMessageDialog(rootPane, "Please select the user privilege");
        }

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTextFieldUserNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUserNameKeyTyped

    }//GEN-LAST:event_jTextFieldUserNameKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        for (int i = 0; i < jTableAccessPoint.getRowCount(); i++) {
            Vector v = new Vector();
            Boolean f = false;

            jTableAccessPoint.setValueAt(f, i, 2);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameUserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameUserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameUserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameUserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameUserCreation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonActive;
    private javax.swing.JButton jButtonInactive;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox jComboBoxLocation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabelLocation;
    private javax.swing.JLabel jLabelNICno;
    private javax.swing.JLabel jLabelPassword1;
    private javax.swing.JLabel jLabelPassword2;
    private javax.swing.JLabel jLabelUserName;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordFieldPassword1;
    private javax.swing.JPasswordField jPasswordFieldPassword2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableAccessPoint;
    private javax.swing.JTable jTableUserDetails;
    private javax.swing.JTextField jTextFieldNICno;
    private javax.swing.JTextField jTextFieldUserName;
    // End of variables declaration//GEN-END:variables
}
