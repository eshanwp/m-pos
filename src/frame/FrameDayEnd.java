/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import cls.db;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author esh
 */
public class FrameDayEnd extends javax.swing.JFrame {

    String LOCATION_ID = null;
    String USER_NAME = null;
    String dayEnd = null;
    String DateIncrement = null;

    /**
     * Creates new form FrameDayEnd
     */
    public FrameDayEnd() {
        initComponents();
    }

    public FrameDayEnd(String LOCATIONID, String USERNAME) {
        initComponents();

        LOCATION_ID = LOCATIONID;
        USER_NAME = USERNAME;
        showCurrentDate();

    }

    void showCurrentDate() {

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT day FROM day_end");

            while (rs.next()) {
                dayEnd = rs.getString("day");
                System.out.println(dayEnd);

            }

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Calendar c = Calendar.getInstance();
            c.setTime(sdf.parse(dayEnd));
            c.add(Calendar.DATE, 1);
            DateIncrement = sdf.format(c.getTime());

            jTextField1.setText(dayEnd);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Day End");
        setPreferredSize(new java.awt.Dimension(400, 200));
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Day End");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 20));

        jTextField1.setEditable(false);
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 240, 22));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Day");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/run1.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/run2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 80, 74, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int s = JOptionPane.showConfirmDialog(null, "Are you sure process this.\nCan't reverse the day end process. ");

        if (s == JOptionPane.OK_OPTION) {

            try {

                cls.db.myConnection().createStatement().executeUpdate("UPDATE day_end SET status='" + "true" + "' WHERE day='" + dayEnd + "' ");
                cls.db.myConnection().createStatement().executeUpdate("INSERT INTO day_end (day, status) VALUE('" + DateIncrement + "' , '" + "false" + "')");
                
                cls.db.myConnection().createStatement().executeUpdate("UPDATE hold_bill SET status='" + "TAKING" + "' WHERE date1='" + dayEnd + "' ");

                String dateFrom = jTextField1.getText() + " 00:00:00";

                String dateTo = jTextField1.getText() + " 23:59:59";

                String grossAmt = null;
                String exchange = null;
                String exchangeCount = null;
                String discount = null;
                String netSale = null;
                String noCustomer = null;

                ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(amount) FROM invoice WHERE date between '" + dateFrom + "' AND '" + dateTo + "' AND status='" + "ACTIVE" + "' ");
                while (rs.next()) {
                    grossAmt = rs.getString("SUM(amount)");
                }

                ResultSet rs1 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(net_amt) FROM invoice WHERE date between '" + dateFrom + "' AND '" + dateTo + "' AND status='" + "CHANGE" + "' ");
                while (rs1.next()) {
                    exchange = rs1.getString("SUM(net_amt)");
                }

                ResultSet rs2 = cls.db.myConnection().createStatement().executeQuery("SELECT COUNT(status) FROM invoice WHERE date between '" + dateFrom + "' AND '" + dateTo + "' AND status='" + "CHANGE" + "' ");
                while (rs2.next()) {
                    exchangeCount = rs2.getString("COUNT(status)");
                }

                ResultSet rs3 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(discount) FROM invoice WHERE date between '" + dateFrom + "' AND '" + dateTo + "' AND status='" + "ACTIVE" + "' ");
                while (rs3.next()) {
                    discount = rs3.getString("SUM(discount)");
                }

                ResultSet rs4 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(net_amt) FROM invoice WHERE date between '" + dateFrom + "' AND '" + dateTo + "' AND status='" + "ACTIVE" + "' ");
                while (rs4.next()) {
                    netSale = rs4.getString("SUM(net_amt)");
                }

                ResultSet rs5 = cls.db.myConnection().createStatement().executeQuery("SELECT COUNT(idinvoice_id) FROM invoice_header WHERE date between '" + dateFrom + "' AND '" + dateTo + "' ");
                while (rs5.next()) {
                    noCustomer = rs5.getString("COUNT(idinvoice_id)");
                }

                try {

                    InputStream is = new FileInputStream(new File("C:/i3Codes/CellNet/Z_Reading.jrxml"));
                    JasperReport jr = JasperCompileManager.compileReport(is);

                    Map m = new HashMap();
                    m.put("From", dateFrom);
                    m.put("To", dateTo);
                    m.put("user_name", USER_NAME);
                    m.put("gross_sale", grossAmt);
                    m.put("exchange", exchange);
                    m.put("exchangeCount", exchangeCount);
                    m.put("discount", discount);
                    m.put("netSale", netSale);
                    m.put("noCustomer", noCustomer);

                    JasperPrint jp = JasperFillManager.fillReport(jr, m, db.myConnection());
                    JasperViewer jv = new JasperViewer(jp, false);
                    jv.setTitle("Z Reading");
                    jv.setVisible(true);
//                    JasperPrintManager.printReport(jp, true);

                    JOptionPane.showMessageDialog(rootPane, "Successfully Completed the day end process");
                    this.dispose();
                    

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, e);
                }

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, e);
            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDayEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDayEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDayEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDayEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameDayEnd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
