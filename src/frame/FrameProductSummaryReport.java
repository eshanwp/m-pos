/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author esh
 */
public class FrameProductSummaryReport extends javax.swing.JFrame {

    DefaultTableModel dtm = new DefaultTableModel();

    String USER_NAME = null;
    String LOCATION_ID = null;

    /**
     * Creates new form FrameCategorySummaryReport
     */
    public FrameProductSummaryReport() {
        initComponents();
    }

    public FrameProductSummaryReport(String LOCATIONID, String USERNAME) {
        initComponents();

        LOCATION_ID = LOCATIONID;
        USER_NAME = USERNAME;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        jDateChooserFrom = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jDateChooserTo = new com.toedter.calendar.JDateChooser();
        jLabelFrom = new javax.swing.JLabel();
        jLabelTo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextFieldCost = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldDiscount = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldNetAmount = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextFieldProfit = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Product Summary Report");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT CODE", "PRODUCT NAME", "COUNT", "COST", "AMOUNT", "DISCOUNT", "NETAMOUNT", "PROFIT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 830, 350));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("From Date *");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jDateChooserFrom.setDateFormatString("dd/MM/yyyy");
        jDateChooserFrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserFromPropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooserFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 207, 22));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("To Date *");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        jDateChooserTo.setDateFormatString("dd/MM/yyyy");
        jDateChooserTo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserToPropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooserTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 207, 22));

        jLabelFrom.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelFrom.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 200, 15));

        jLabelTo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTo.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 200, 15));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search1.png"))); // NOI18N
        jButton1.setToolTipText("");
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 74, 30));

        jTextFieldCost.setEditable(false);
        jTextFieldCost.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldCost.setBorder(null);
        jPanel1.add(jTextFieldCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 210, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Cost");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Amount");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));

        jTextFieldAmount.setEditable(false);
        jTextFieldAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldAmount.setBorder(null);
        jPanel1.add(jTextFieldAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 500, 210, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Discount");
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, -1, -1));

        jTextFieldDiscount.setEditable(false);
        jTextFieldDiscount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldDiscount.setBorder(null);
        jPanel1.add(jTextFieldDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, 210, -1));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Net amount");
        jPanel1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 470, -1, -1));

        jTextFieldNetAmount.setEditable(false);
        jTextFieldNetAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldNetAmount.setBorder(null);
        jPanel1.add(jTextFieldNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, 210, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setText("Profit");
        jPanel1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, -1, -1));

        jTextFieldProfit.setEditable(false);
        jTextFieldProfit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldProfit.setBorder(null);
        jPanel1.add(jTextFieldProfit, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, 210, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 888, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooserFromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFromPropertyChange

        if (jDateChooserFrom.getDate() == null) {

        } else {
            jLabelFrom.setText("");
        }
    }//GEN-LAST:event_jDateChooserFromPropertyChange

    private void jDateChooserToPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserToPropertyChange

        if (jDateChooserTo.getDate() == null) {

        } else {
            jLabelTo.setText("");
        }

    }//GEN-LAST:event_jDateChooserToPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jDateChooserFrom.getDate() == null || jDateChooserTo.getDate() == null) {

            if (jDateChooserFrom.getDate() == null) {
                jLabelFrom.setText("Required");
            }

            if (jDateChooserTo.getDate() == null) {
                jLabelTo.setText("Required");
            }

        } else {

            dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            try {

                Date d = jDateChooserFrom.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String dd = sdf.format(d);

                Date d1 = jDateChooserTo.getDate();
                SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy");
                String dd1 = sdf1.format(d1);

                System.out.println(dd);
                System.out.println(dd1);

                String qty = null;
                String cost = null;
                Double net_amount=0.00;

                ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT DISTINCT id_product FROM invoice WHERE  date BETWEEN  '" + dd + "' AND '" + dd1 + "'");

                while (rs.next()) {
                    Vector v = new Vector();

                    String idProduct = rs.getString("id_product");
                    
                    ResultSet rs1 = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM product WHERE  idproduct='" + idProduct + "' ");

                    if (rs1.next()) {
                        v.add(rs1.getString("p_code"));
                        v.add(rs1.getString("p_name"));

                    }

                    ResultSet rs2 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(qty) FROM invoice WHERE  id_product='" + idProduct + "' ");

                    if (rs2.next()) {
                        v.add(rs2.getDouble("SUM(qty)"));
                        qty = rs2.getString("SUM(qty)");
                    }

                    ResultSet rs3 = cls.db.myConnection().createStatement().executeQuery("SELECT *FROM product WHERE  idproduct='" + idProduct + "' ");

                    if (rs3.next()) {
                        cost = rs3.getString("cost");
                    }
                    

                    Double tot_cost = Double.parseDouble(cost) * Double.parseDouble(qty);
                    v.add(tot_cost);
                    
                    ResultSet rs4 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(amount) FROM invoice WHERE  id_product='" + idProduct + "' ");

                    if (rs4.next()) {
                        v.add(rs4.getDouble("SUM(amount)"));
                    }
                    
                    ResultSet rs5 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(discount) FROM invoice WHERE  id_product='" + idProduct + "' ");

                    if (rs5.next()) {
                        v.add(rs5.getDouble("SUM(discount)"));
                    }
                    
                    ResultSet rs6 = cls.db.myConnection().createStatement().executeQuery("SELECT SUM(net_amt) FROM invoice WHERE  id_product='" + idProduct + "' ");

                    if (rs6.next()) {
                        v.add(rs6.getDouble("SUM(net_amt)"));
                        net_amount=rs6.getDouble("SUM(net_amt)");
                    }
                    
                    Double profit =net_amount-tot_cost;
                    v.add(profit);

//                    v.add(rs.getString("date"));

                    dtm.addRow(v);
                }
                
                Double COST=0.00;
                Double AMOUNT=0.00;
                Double DISCOUNT=0.00;
                Double NET_AMOUNT=0.00;
                Double PROFIT=0.00;
                
                
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                        String Cost = jTable1.getValueAt(i, 3).toString();
                        String amount = jTable1.getValueAt(i, 4).toString();
                        String discount = jTable1.getValueAt(i, 5).toString();
                        String net_amt = jTable1.getValueAt(i, 6).toString();
                        String profit = jTable1.getValueAt(i, 7).toString();

                        COST = COST + Double.parseDouble(Cost);
                        AMOUNT = AMOUNT + Double.parseDouble(amount);
                        DISCOUNT = DISCOUNT + Double.parseDouble(discount);
                        NET_AMOUNT = NET_AMOUNT + Double.parseDouble(net_amt);
                        PROFIT = PROFIT + Double.parseDouble(profit);

                        
                        DecimalFormat df1 = new DecimalFormat("0.00");
                        jTextFieldCost.setText(df1.format(COST));
                        
                        DecimalFormat df2 = new DecimalFormat("0.00");
                        jTextFieldAmount.setText(df2.format(AMOUNT));
                        
                        DecimalFormat df3 = new DecimalFormat("0.00");
                        jTextFieldDiscount.setText(df3.format(DISCOUNT));
                        
                        DecimalFormat df4 = new DecimalFormat("0.00");
                        jTextFieldNetAmount.setText(df4.format(NET_AMOUNT));
                        
                        DecimalFormat df5 = new DecimalFormat("0.00");
                        jTextFieldProfit.setText(df5.format(PROFIT));
                        

                    }
                

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameProductSummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameProductSummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameProductSummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameProductSummaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameProductSummaryReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public static com.toedter.calendar.JDateChooser jDateChooserFrom;
    public static com.toedter.calendar.JDateChooser jDateChooserTo;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabelFrom;
    public static javax.swing.JLabel jLabelTo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTextField jTextFieldAmount;
    public static javax.swing.JTextField jTextFieldCost;
    public static javax.swing.JTextField jTextFieldDiscount;
    public static javax.swing.JTextField jTextFieldNetAmount;
    public static javax.swing.JTextField jTextFieldProfit;
    // End of variables declaration//GEN-END:variables
}
