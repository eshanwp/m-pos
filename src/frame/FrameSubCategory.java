/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import cls.AccessPoint;
import cls.Category;
import cls.SubCategory;
import static frame.FrameCategory.jTable1;
import static frame.FrameCategory.jTextFieldCategoryCode;
import static frame.FrameCategory.jTextFieldCategoryName;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author esh
 */
public class FrameSubCategory extends javax.swing.JFrame {

    String LOACATION_ID = null;
    String USER_NAME = null;

    DefaultTableModel dtm = new DefaultTableModel();

    /**
     * Creates new form FrameCategory
     */
    public FrameSubCategory() {
        initComponents();
    }

    public FrameSubCategory(String LOCATIONID, String USERNAME) {
        initComponents();

        LOACATION_ID = LOCATIONID;
        USER_NAME = USERNAME;

        SubCategory sc = new SubCategory();
        sc.loadCategory();

        jButtonUpdate.setEnabled(false);
        jCheckBox.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldSubCategoryCode = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldSubCategoryName = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxCategoryName = new javax.swing.JComboBox();
        jLabelSubCategoryCode = new javax.swing.JLabel();
        jLabelSubCategoryName = new javax.swing.JLabel();
        jLabelCategoryName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sub Category Creation");
        setPreferredSize(new java.awt.Dimension(410, 550));
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Sub Category Creation");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 20));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Sub Category Code*");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jTextFieldSubCategoryCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSubCategoryCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSubCategoryCodeFocusLost(evt);
            }
        });
        jTextFieldSubCategoryCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSubCategoryCodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSubCategoryCodeKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldSubCategoryCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 210, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Sub Category Name*");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jTextFieldSubCategoryName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSubCategoryNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSubCategoryNameFocusLost(evt);
            }
        });
        jTextFieldSubCategoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSubCategoryNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSubCategoryNameKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldSubCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 210, -1));

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save1.png"))); // NOI18N
        jButtonSave.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save2.png"))); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 74, 30));

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add1.png"))); // NOI18N
        jButtonAdd.setContentAreaFilled(false);
        jButtonAdd.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add2.png"))); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 74, 30));

        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search1.png"))); // NOI18N
        jButtonSearch.setContentAreaFilled(false);
        jButtonSearch.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search2.png"))); // NOI18N
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 74, 30));

        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update1.png"))); // NOI18N
        jButtonUpdate.setContentAreaFilled(false);
        jButtonUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update2.png"))); // NOI18N
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 74, 30));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUB CODE", "SUB NAME", "CATEGORY NAME", "STATUS", "DELETE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 370, 210));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Category Name*");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jComboBoxCategoryName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxCategoryNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxCategoryNameFocusLost(evt);
            }
        });
        jComboBoxCategoryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoryNameActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 207, 22));

        jLabelSubCategoryCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSubCategoryCode.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelSubCategoryCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 200, 15));

        jLabelSubCategoryName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSubCategoryName.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelSubCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 200, 15));

        jLabelCategoryName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCategoryName.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(jLabelCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 172, 200, 15));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh1.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 74, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 290, 20));

        jCheckBox.setContentAreaFilled(false);
        jPanel1.add(jCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 183, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inactive.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 74, 26));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSubCategoryCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryCodeFocusGained

    }//GEN-LAST:event_jTextFieldSubCategoryCodeFocusGained

    private void jTextFieldSubCategoryCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryCodeFocusLost

    }//GEN-LAST:event_jTextFieldSubCategoryCodeFocusLost

    private void jTextFieldSubCategoryCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryCodeKeyReleased

        if (jTextFieldSubCategoryCode.getText().length() > 0) {
            jLabelSubCategoryCode.setText("");
        }

        String s = jTextFieldSubCategoryCode.getText();
        jTextFieldSubCategoryCode.setText(s.toUpperCase());

    }//GEN-LAST:event_jTextFieldSubCategoryCodeKeyReleased

    private void jTextFieldSubCategoryCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryCodeKeyTyped

    }//GEN-LAST:event_jTextFieldSubCategoryCodeKeyTyped

    private void jTextFieldSubCategoryNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSubCategoryNameFocusGained

    private void jTextFieldSubCategoryNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSubCategoryNameFocusLost

    private void jTextFieldSubCategoryNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryNameKeyReleased

        if (jTextFieldSubCategoryName.getText().length() > 0) {
            jLabelSubCategoryName.setText("");
        }

        String s = jTextFieldSubCategoryName.getText();
        jTextFieldSubCategoryName.setText(s.toUpperCase());
    }//GEN-LAST:event_jTextFieldSubCategoryNameKeyReleased

    private void jTextFieldSubCategoryNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubCategoryNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSubCategoryNameKeyTyped

    private void jComboBoxCategoryNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxCategoryNameFocusGained

    }//GEN-LAST:event_jComboBoxCategoryNameFocusGained

    private void jComboBoxCategoryNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxCategoryNameFocusLost

        jButtonAdd.grabFocus();
    }//GEN-LAST:event_jComboBoxCategoryNameFocusLost
    String id_Category = null;
    private void jComboBoxCategoryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoryNameActionPerformed

        try {

            ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE category_name='" + jComboBoxCategoryName.getSelectedItem().toString() + "'  ");

            while (rs.next()) {
                id_Category = rs.getString("idcategory");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);
        }

        if (jComboBoxCategoryName.getSelectedIndex() > 0) {
            jLabelCategoryName.setText("");
        }
    }//GEN-LAST:event_jComboBoxCategoryNameActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

        int i = jTable1.getRowCount();
        String s1 = "";
        String s2 = "";
        boolean exists = false;

        if (jTextFieldSubCategoryCode.getText().length() == 0 || jTextFieldSubCategoryName.getText().length() == 0 || jComboBoxCategoryName.getSelectedIndex() <= 0) {

            if (jTextFieldSubCategoryCode.getText().length() == 0) {
                jLabelSubCategoryCode.setText("Required");
            }

            if (jTextFieldSubCategoryName.getText().length() == 0) {
                jLabelSubCategoryName.setText("Required");
            }

            if (jComboBoxCategoryName.getSelectedIndex() <= 0) {
                jLabelCategoryName.setText("Required");
            }

        } else {

            for (int j = 0; j < jTable1.getRowCount(); j++) {
                s1 = jTable1.getValueAt(j, 0).toString();
                s2 = jTable1.getValueAt(j, 1).toString();

                if (jTextFieldSubCategoryCode.getText().equals(s1) || jTextFieldSubCategoryName.getText().equals(s2)) {
                    exists = true;
                    break;
                }

            }

            if (!exists) {

                SubCategory sc = new SubCategory();
                String result[] = sc.search();

                if (result[0] != null || result[1] != null || result[2] != null) {

                    if (result[1].equals(jTextFieldSubCategoryCode.getText())) {

                        JOptionPane.showMessageDialog(rootPane, "Sub Category code already used");
                        jTextFieldSubCategoryName.setText(result[2]);
                        jTextFieldSubCategoryName.setEditable(false);
                        jComboBoxCategoryName.setEnabled(false);

                    } else if (result[2].equals(jTextFieldSubCategoryName.getText())) {

                        JOptionPane.showMessageDialog(rootPane, "Sub Category name already used");
                        jTextFieldSubCategoryName.setText(result[2]);
                        jTextFieldSubCategoryName.setEditable(false);
                        jComboBoxCategoryName.setEnabled(false);

                    }

                } else {

                    dtm = (DefaultTableModel) jTable1.getModel();
                    Vector v = new Vector();

                    v.add(jTextFieldSubCategoryCode.getText());
                    v.add(jTextFieldSubCategoryName.getText());
                    v.add(jComboBoxCategoryName.getSelectedItem().toString());
                    v.add("ACTIVE");
                    v.add("DELETE");
                    dtm.addRow(v);

                    jTextFieldSubCategoryCode.setText("");
                    jTextFieldSubCategoryName.setText("");
                    jComboBoxCategoryName.setSelectedIndex(0);
                    
                    jTextFieldSubCategoryCode.grabFocus();

                }

            } else {

                JOptionPane.showMessageDialog(rootPane, "Data already exist.");
            }

        }

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.dispose();
        FrameSubCategory sc = new FrameSubCategory(LOACATION_ID, USER_NAME);
        sc.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        dtm = (DefaultTableModel) FrameSubCategory.jTable1.getModel();

        int i = FrameSubCategory.jTable1.getSelectedRow();
        int j = FrameSubCategory.jTable1.getSelectedColumn();

        String s = dtm.getValueAt(i, j).toString();

        String s1 = "DELETE";
        System.out.println(s);
        if (s.equals(s1)) {
            dtm.removeRow(i);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        int i = FrameSubCategory.jTable1.getRowCount();

        if (i == 0) {
            JOptionPane.showMessageDialog(rootPane, "Please add data");
        } else {

            AccessPoint ap = new AccessPoint();
            String status = ap.acceesPoint_01(USER_NAME);

            if (status.equals("true")) {

                int s = JOptionPane.showConfirmDialog(null, "Are you sure, you want to Save?");

                if (s == JOptionPane.OK_OPTION) {
                    SubCategory sc = new SubCategory();
                    sc.save();
                    this.dispose();
                    FrameSubCategory sc1 = new FrameSubCategory(LOACATION_ID, USER_NAME);
                    sc1.setVisible(true);
                }

            } else {
                jButtonUpdate.setVisible(false);
                JOptionPane.showMessageDialog(rootPane, "This access is not grant you\nCan't save details.");

            }

        }

    }//GEN-LAST:event_jButtonSaveActionPerformed
    String id_SubCategory = null;

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String CategoryName = null;

        if (jTextFieldSubCategoryCode.getText().length() == 0 && jTextFieldSubCategoryName.getText().length() == 0 && jComboBoxCategoryName.getSelectedIndex() == 0) {

            SubCategory sc = new SubCategory();
            sc.searchAll();

            jButtonAdd.setEnabled(false);
            jButtonUpdate.setEnabled(false);
            jButtonSave.setEnabled(false);
            jCheckBox.setVisible(true);

            int i = FrameSubCategory.jTable1.getRowCount();
            jLabel2.setText("NO OF SUB CATEGORY = " + i);
            System.out.println("2");

        } else if (jTextFieldSubCategoryCode.getText().length() > 0 || jTextFieldSubCategoryName.getText().length() > 0) {
            System.out.println("3");
            SubCategory sc = new SubCategory();
            String result[] = sc.search();

            jTextFieldSubCategoryName.setText(result[2]);
            jTextFieldSubCategoryCode.setText(result[1]);

            id_SubCategory = result[0];
            jButtonAdd.setEnabled(false);
            jButtonSave.setEnabled(false);
            jButtonUpdate.setEnabled(true);
            jCheckBox.setVisible(true);

            try {

                ResultSet rs = cls.db.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE idcategory='" + result[3] + "'  ");

                while (rs.next()) {
                    CategoryName = rs.getString("category_name");
                }
                jComboBoxCategoryName.setSelectedItem(CategoryName);

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }


    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed

        if (jTextFieldSubCategoryCode.getText().length() == 0 || jTextFieldSubCategoryName.getText().length() == 0 || jComboBoxCategoryName.getSelectedIndex() <= 0) {

            if (jTextFieldSubCategoryCode.getText().length() == 0) {
                jLabelSubCategoryCode.setText("Required");
            }

            if (jTextFieldSubCategoryName.getText().length() == 0) {
                jLabelSubCategoryName.setText("Required");
            }

            if (jComboBoxCategoryName.getSelectedIndex() <= 0) {
                jLabelCategoryName.setText("Required");
            }

        } else {

            AccessPoint ap = new AccessPoint();
            String status = ap.acceesPoint_02(USER_NAME);

            if (status.equals("true")) {

                int s = JOptionPane.showConfirmDialog(null, "Are you sure, you want to update?");

                if (s == JOptionPane.OK_OPTION) {

                    SubCategory sc = new SubCategory();
                    sc.update(id_SubCategory, id_Category);
                    this.dispose();
                    FrameSubCategory sc1 = new FrameSubCategory(LOACATION_ID, USER_NAME);
                    sc1.setVisible(true);

                }

            } else {
                jButtonUpdate.setVisible(false);
                JOptionPane.showMessageDialog(rootPane, "This access is not grant you\nCan't update details.");

            }

        }

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameSubCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameSubCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameSubCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameSubCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameSubCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    public static javax.swing.JCheckBox jCheckBox;
    public static javax.swing.JComboBox jComboBoxCategoryName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCategoryName;
    private javax.swing.JLabel jLabelSubCategoryCode;
    private javax.swing.JLabel jLabelSubCategoryName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTextField jTextFieldSubCategoryCode;
    public static javax.swing.JTextField jTextFieldSubCategoryName;
    // End of variables declaration//GEN-END:variables
}
